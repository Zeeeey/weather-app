{"version":3,"sources":["reportWebVitals.js","types/weatherTypes.js","reducers/weatherReducer.js","reducers/rootReducer.js","store.js","actions/weatherActions.js","urls/weatherURL.js","styles.js","components/BarChart.js","components/Carousel.js","components/Temperature.js","components/Weather.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","FETCHING_STARTS","FETCHING_STOPS","GET_WEATHER_DETAILS","initialState","city","lists","degree","isFetching","weatherReducer","state","action","type","payload","types","combineReducers","middleware","thunk","store","createStore","rootReducer","applyMiddleware","getWeatherDetails","cityName","countryCode","unit","dispatch","a","fetch","process","response","json","data","list","length","message","cod","toast","info","styles","body","color","blueColor","backgroundColor","cityText","fontFamily","fontSize","itemDiv","display","justifyContent","alignItems","height","width","margin","cursor","paddingTB50","padding","paddingTop10","paddingTop","paddingTop30","dflex","flexDirection","font16","itemTemp","marginTop","itemText","paddingBottom","selectDiv","marginTop20","textWhite","BarChart","props","selectedDay","this","labels","map","day","moment","date","format","datasets","label","temp","borderWidth","borderColor","options","responsive","scales","x","title","text","font","family","size","weight","y","plugins","legend","React","Component","breakPoints","itemsToShow","itemsToScroll","CarouselComp","showBarChart","item","setState","showBars","i","slice","dt_txt","main","time","prevState","carouselItems","icon","weather","desc","description","feelsLike","feels_like","humidity","days","classes","className","onClick","src","alt","toUpperCase","Temperature","handleChange","RadioGroup","aria-label","name","value","onChange","FormControlLabel","control","Radio","connect","Weather","ngCities","mdCities","ukCities","ngCity","MenuItem","mdCity","ukCity","stateObject","handleLocation","handleSubmit","CssBaseline","AppBar","position","Toolbar","Typography","variant","Container","maxWidth","align","gutterBottom","country","FormControl","InputLabel","id","Select","labelId","Button","Carousel","withStyles","App","e","target","preventDefault","CircularProgress","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16f7a54a.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const FETCHING_STARTS = 'FETCHING_STARTS';\r\nexport const FETCHING_STOPS = 'FETCHING_STOPS';\r\nexport const GET_WEATHER_DETAILS = 'GET_WEATHER_DETAILS';\r\n","import * as types from \"../types/weatherTypes\";\r\n\r\nconst initialState = {\r\n  city: {},\r\n  lists: [],\r\n  degree: \"\",\r\n  isFetching: false,\r\n};\r\n\r\nexport const weatherReducer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case types.FETCHING_STARTS:\r\n      return {\r\n        ...state,\r\n        isFetching: payload,\r\n      };\r\n\r\n    case types.FETCHING_STOPS:\r\n      return {\r\n        ...state,\r\n        isFetching: payload,\r\n      };\r\n\r\n    case types.GET_WEATHER_DETAILS:\r\n      return {\r\n        ...state,\r\n        city: payload.city,\r\n        lists: payload.lists,\r\n        degree: payload.degree,\r\n        isFetching: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default weatherReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport weatherReducer from \"./weatherReducer\";\r\n\r\nexport default combineReducers({\r\n  weatherReducer,\r\n});\r\n\r\n\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/rootReducer';\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, initialState, applyMiddleware(...middleware));\r\n\r\nexport default store;\r\n","import { toast } from \"react-toastify\";\r\nimport * as types from \"../types/weatherTypes\";\r\nimport { GET_WEATHER_DETAILS_URL } from \"../urls/weatherURL\";\r\n\r\nconst API_KEY = process.env.REACT_APP_WEATHER_API_KEY;\r\n\r\nexport const getWeatherDetails = (cityName, countryCode, unit) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: types.FETCHING_STARTS,\r\n      payload: true,\r\n    });\r\n    const response = await fetch(`${GET_WEATHER_DETAILS_URL}?q=${cityName},${countryCode}&APPID=${API_KEY}&cnt=40&units=${unit}`);\r\n    const data = await response.json();\r\n    if (data.list && data.list.length) {\r\n      dispatch({\r\n        type: types.GET_WEATHER_DETAILS,\r\n        payload: {\r\n          city: data.city,\r\n          lists: data.list,\r\n          degree: unit,\r\n        },\r\n      });\r\n    } else {\r\n      const { message, cod } = data;\r\n      if (cod === 401) toast.info(\"Invalid Key\");\r\n      else if (message) toast.info(message);\r\n      else toast.info(\"Something Went Wrong!\");\r\n    }\r\n  } catch (error) {\r\n    toast.info(\"Something Went Wrong!\");\r\n    dispatch({\r\n      type: types.FETCHING_STOPS,\r\n      payload: false,\r\n    });\r\n  }\r\n};\r\n","export const GET_WEATHER_DETAILS_URL = `https://api.openweathermap.org/data/2.5/forecast`;\r\nexport const GET_WEATHER_ICON_URL = `https://openweathermap.org/img/wn`;\r\n","const styles = {\r\n  body: {\r\n    color: \"#fff\",\r\n  },\r\n  blueColor: {\r\n    backgroundColor: \"rgb(21,126,251)\",\r\n  },\r\n  cityText: {\r\n    fontFamily: \"Arial\",\r\n    fontSize: \"5em\",\r\n  },\r\n  itemDiv: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: \"300px\",\r\n    width: \"100%\",\r\n    backgroundColor: \"rgb(21,126,251)\",\r\n    color: \"#fff\",\r\n    margin: \"15px\",\r\n    fontSize: \"4em\",\r\n    cursor: \"pointer\",\r\n  },\r\n  paddingTB50: {\r\n    padding: \"50px 0px\",\r\n  },\r\n  paddingTop10: {\r\n    paddingTop: \"10px\",\r\n  },\r\n  paddingTop30: {\r\n    paddingTop: \"30px\",\r\n  },\r\n  dflex: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n  font16: {\r\n    fontSize: \"16px\",\r\n  },\r\n  itemTemp: {\r\n    fontSize: \"35px\",\r\n    paddingTop: \"0px\",\r\n    marginTop: \"0px\",\r\n  },\r\n  itemText: {\r\n    color: \"black\",\r\n    paddingBottom: \"20px\",\r\n  },\r\n  selectDiv: {\r\n    color: 'white',\r\n    margin: '10px',\r\n    fontSize: '20px'\r\n  },\r\n  marginTop20: {\r\n    marginTop: \"20px\",\r\n  },\r\n  textWhite: {\r\n    color: \"white\",\r\n  },\r\n};\r\n\r\nexport default styles;\r\n","import React from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport moment from \"moment\";\r\n\r\nclass BarChart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    const { selectedDay } = this.props;\r\n    const data = {\r\n      labels: selectedDay.map((day) =>\r\n        moment(day.date).format(\"DD-MMM-YY, h:mm A\")\r\n      ),\r\n      datasets: [\r\n        {\r\n          label: \"Temperature\",\r\n          data: selectedDay.map((day) => day.temp),\r\n          borderWidth: 2,\r\n          backgroundColor: [\r\n            \"rgba(255, 99, 132, 0.2)\",\r\n            \"rgba(255, 159, 64, 0.2)\",\r\n            \"rgba(255, 205, 86, 0.2)\",\r\n            \"rgba(75, 192, 192, 0.2)\",\r\n            \"rgba(54, 162, 235, 0.2)\",\r\n            \"rgba(153, 102, 255, 0.2)\",\r\n            \"rgba(201, 203, 207, 0.2)\",\r\n            \"rgba(250, 10, 150, 0.2)\",\r\n          ],\r\n          borderColor: [\r\n            \"rgb(255, 99, 132)\",\r\n            \"rgb(255, 159, 64)\",\r\n            \"rgb(255, 205, 86)\",\r\n            \"rgb(75, 192, 192)\",\r\n            \"rgb(54, 162, 235)\",\r\n            \"rgb(153, 102, 255)\",\r\n            \"rgb(201, 203, 207)\",\r\n            \"rgb(250, 10, 150)\",\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n    return (\r\n      <>\r\n        <Bar\r\n          data={data}\r\n          options={{\r\n            responsive: true,\r\n            scales: {\r\n              x: {\r\n                display: true,\r\n                title: {\r\n                  display: true,\r\n                  text: \"Date and Time\",\r\n                  color: \"white\",\r\n                  font: {\r\n                    family: \"Comic Sans MS\",\r\n                    size: \"12em\",\r\n                    weight: \"bold\",\r\n                  },\r\n                },\r\n              },\r\n              y: {\r\n                display: true,\r\n                title: {\r\n                  display: true,\r\n                  text: \"Temperature\",\r\n                  color: \"white\",\r\n                  font: {\r\n                    family: \"Comic Sans MS\",\r\n                    size: \"12em\",\r\n                  },\r\n                },\r\n              },\r\n            },\r\n            plugins: {\r\n              legend: {\r\n                display: false,\r\n              },\r\n              title: {\r\n                display: true,\r\n                text: \"Weather Forecast\",\r\n                color: \"white\",\r\n                font: { weight: \"bold\", size: \"15em\" },\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BarChart;\r\n","import React, { Component } from \"react\";\r\nimport Carousel from \"react-elastic-carousel\";\r\nimport Moment from \"react-moment\";\r\nimport { GET_WEATHER_ICON_URL } from \"../urls/weatherURL\";\r\nimport BarChart from \"./BarChart\";\r\n\r\nconst breakPoints = [\r\n  { width: 1, itemsToShow: 1 },\r\n  { width: 550, itemsToShow: 2, itemsToScroll: 2 },\r\n  { width: 768, itemsToShow: 3 },\r\n];\r\n\r\nclass CarouselComp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      days: [],\r\n      selectedDay: [],\r\n      showBars: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.carouselItems();\r\n  }\r\n\r\n  showBarChart = (item) => {\r\n    const { lists } = this.props;\r\n    this.setState({ showBars: true, selectedDay: [] });\r\n    for (let i = 0; i < lists.length; i++) {\r\n      if (item.date.slice(0, 10) === lists[i].dt_txt.slice(0, 10)) {\r\n        let data = {\r\n          date: lists[i].dt_txt,\r\n          temp: lists[i].main.temp,\r\n          time: lists[i].dt_txt.slice(11, 19),\r\n        };\r\n        this.setState((prevState) => ({\r\n          selectedDay: [...prevState.selectedDay, data],\r\n        }));\r\n      }\r\n    }\r\n  };\r\n\r\n  carouselItems = () => {\r\n    const { lists } = this.props;\r\n    for (let i = 0; i < lists.length; i += 8) {\r\n      let data = {\r\n        date: lists[i].dt_txt,\r\n        icon: lists[i].weather[0].icon,\r\n        desc: lists[i].weather[0].description,\r\n        temp: lists[i].main.temp,\r\n        feelsLike: lists[i].main.feels_like,\r\n        humidity: lists[i].main.humidity,\r\n      };\r\n      this.setState((prevState) => ({\r\n        days: [...prevState.days, data],\r\n      }));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { showBars, days } = this.state;\r\n    const { classes, degree } = this.props;\r\n    const { itemDiv, font16, itemTemp, paddingTB50, paddingTop30, itemText } =\r\n      classes;\r\n    return (\r\n      <>\r\n        <Carousel breakPoints={breakPoints}>\r\n          {days.map((day) => {\r\n            const { date, icon, temp, feelsLike, humidity, desc } = day;\r\n            return (\r\n              <div\r\n                key={date}\r\n                className={itemDiv}\r\n                onClick={() => this.showBarChart(day)}\r\n              >\r\n                <div className={font16}>\r\n                  <div className={paddingTop30}>\r\n                    <img\r\n                      src={`${GET_WEATHER_ICON_URL}/${icon}@2x.png`}\r\n                      alt=\"icon\"\r\n                    />\r\n                  </div>\r\n                  <h2 className={itemTemp}>\r\n                    {temp}\r\n                    &deg;\r\n                    {degree === \"metric\" ? \"C\" : \"F\"}\r\n                  </h2>\r\n                  <p className={itemText}>\r\n                    <b>\r\n                      {desc.toUpperCase()}\r\n                      <br />\r\n                      Feels Like: {feelsLike}\r\n                      &deg;\r\n                      {degree === \"metric\" ? \"C\" : \"F\"}\r\n                      <br />\r\n                      Humidity: {humidity}%\r\n                      <br />\r\n                      <Moment format=\"DD-MMM-YYYY\">{date}</Moment>\r\n                    </b>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </Carousel>\r\n        {showBars && (\r\n          <div className={paddingTB50}>\r\n            <BarChart selectedDay={this.state.selectedDay} />\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CarouselComp;\r\n","import { connect } from \"react-redux\";\r\nimport { FormControlLabel, Radio, RadioGroup } from \"@material-ui/core\";\r\nimport React, { Component } from \"react\";\r\nimport { getWeatherDetails } from \"../actions/weatherActions\";\r\n\r\nclass Temperature extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    const { classes, unit, handleChange } = this.props;\r\n    return (\r\n      <div>\r\n        <RadioGroup\r\n          aria-label=\"temperature\"\r\n          name=\"temperature\"\r\n          value={unit}\r\n          onChange={handleChange}\r\n          className={classes.dflex}\r\n        >\r\n          <FormControlLabel\r\n            value=\"metric\"\r\n            control={<Radio />}\r\n            label=\"Celsius\"\r\n          />\r\n          <FormControlLabel\r\n            value=\"imperial\"\r\n            control={<Radio />}\r\n            label=\"Fahrenheit\"\r\n          />\r\n        </RadioGroup>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  city: state.weatherReducer.city,\r\n  lists: state.weatherReducer.lists,\r\n  isFetching: state.weatherReducer.isFetching,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getWeatherDetails })(Temperature);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Typography,\r\n  AppBar,\r\n  CssBaseline,\r\n  Toolbar,\r\n  Container,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport CloudIcon from \"@material-ui/icons/Cloud\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport styles from \"../styles\";\r\nimport CarouselComp from \"./Carousel\";\r\nimport Temperature from \"./Temperature\";\r\n\r\nclass Weather extends Component {\r\n  state = {\r\n    ngCities: ['Lagos', 'Katsina', 'Anambra'],\r\n    mdCities: ['Chișinău', 'Bălți', 'Tiraspol'],\r\n    ukCities: ['London', 'Birmingham', 'Glasgow'],\r\n  };\r\n  \r\n  ngCities = this.state.ngCities.map(ngCity => <MenuItem value={ngCity}>{ngCity}</MenuItem>) \r\n  mdCities = this.state.mdCities.map(mdCity => <MenuItem value={mdCity}>{mdCity}</MenuItem>) \r\n  ukCities = this.state.ukCities.map(ukCity => <MenuItem value={ukCity}>{ukCity}</MenuItem>) \r\n  \r\n  render() {\r\n    const { classes, city, lists, degree, handleChange, stateObject, handleLocation, handleSubmit } = this.props;\r\n    const { cityName, countryCode, unit } = stateObject;\r\n    const { body, paddingTop10, paddingTop30, blueColor, cityText, selectDiv, marginTop20, textWhite } = classes;\r\n    return (\r\n      <div className={body}>\r\n        <CssBaseline />\r\n        <AppBar position=\"relative\">\r\n          <Toolbar className={blueColor}>\r\n            <CloudIcon />\r\n            <Typography variant=\"h6\">Weather App</Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <main>\r\n          <div className={paddingTop10}>\r\n            <Container maxWidth=\"sm\">\r\n              <Typography\r\n                variant=\"h2\"\r\n                align=\"center\"\r\n                gutterBottom\r\n                className={cityText}\r\n              >\r\n                {city.name}, {city.country}\r\n              </Typography>\r\n              <div className={paddingTop10}>\r\n                <FormControl variant=\"outlined\">\r\n                  <InputLabel id=\"countryCode\" className={textWhite}>Country</InputLabel>\r\n                  <Select\r\n                    labelId=\"countryCode\"\r\n                    name=\"countryCode\"\r\n                    value={countryCode}\r\n                    className={selectDiv}\r\n                    onChange={handleLocation}\r\n                  >\r\n                    <MenuItem value=\"ng\">Nigeria</MenuItem>\r\n                    <MenuItem value=\"md\">Moldova</MenuItem>\r\n                    <MenuItem value=\"uk\">United Kingdom</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n                <FormControl variant=\"outlined\">\r\n                  <InputLabel id=\"cityName\" className={textWhite}>City</InputLabel>\r\n                  <Select\r\n                    labelId=\"cityName\"\r\n                    name=\"cityName\"\r\n                    value={cityName}\r\n                    className={selectDiv}\r\n                    onChange={handleLocation}\r\n                  >\r\n                    {countryCode === 'md' ? this.mdCities : countryCode === 'uk' ? this.ukCities : this.ngCities }\r\n                  </Select>\r\n                </FormControl>\r\n                <Button variant=\"contained\" color=\"white\"  className={marginTop20} onClick={handleSubmit}>\r\n                  Search\r\n                </Button>\r\n              </div>\r\n              <Temperature\r\n                classes={classes}\r\n                unit={unit}\r\n                handleChange={handleChange}\r\n              />\r\n            </Container>\r\n          </div>\r\n          <div className={paddingTop30}>\r\n            <Container maxWidth=\"md\">\r\n              <CarouselComp classes={classes} lists={lists} degree={degree} />\r\n            </Container>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Weather);\r\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { CircularProgress } from \"@material-ui/core\";\nimport { getWeatherDetails } from \"./actions/weatherActions\";\nimport Weather from \"./components/Weather\";\nclass App extends Component {\n  state = {  cityName: \"Lagos\", countryCode: \"ng\", unit: \"metric\" };\n\n  componentDidMount() {\n    const { cityName, countryCode, unit } = this.state;\n    this.props.getWeatherDetails(cityName, countryCode, unit);\n  }\n  handleChange = (e) => {\n    const { value } = e.target;\n    const { cityName, countryCode } = this.state;\n    this.setState({ unit: value });\n    this.props.getWeatherDetails(cityName, countryCode, value);\n  };\n  handleLocation = (e) => {\n    const { name, value } = e.target;\n    this.setState({ ...this.state, [name]: value });\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { cityName, countryCode, unit } = this.state;\n    this.props.getWeatherDetails(cityName, countryCode, unit);\n  }\n\n  render() {\n    const { city, lists, degree, isFetching } = this.props;\n    return (\n      <div className=\"App\">\n        {isFetching ? (\n          <header className=\"App-header\">\n            <CircularProgress color=\"secondary\" size=\"200px\" />\n            loading...\n          </header>\n        ) : (\n          <Weather\n            city={city}\n            lists={lists}\n            degree={degree}\n            stateObject={this.state}\n            handleChange={(e) => this.handleChange(e)}\n            handleLocation={(e) => this.handleLocation(e)}\n            handleSubmit={(e) => this.handleSubmit(e)}\n          />\n        )}\n        <ToastContainer />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  city: state.weatherReducer.city,\n  lists: state.weatherReducer.lists,\n  degree: state.weatherReducer.degree,\n  isFetching: state.weatherReducer.isFetching,\n});\n\nexport default connect(mapStateToProps, { getWeatherDetails })(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}